

OBJECTIVE_COLOR = (0x00, 0xff, 0xff)

SCRIPT_TRIGGER_COLOR = (0xff, 0xff, 0x00)
SCRIPT_SECONDARY_TRIGGER_COLOR = (0xff, 0x7f, 0x00)
SCRIPT_WIRE_COLOR = (0xff, 0xff, 0xff)

    # Draw pearl if it exists
    if details and hasattr(details, 'pearl') and details.pearl:
      pearl = details.pearl
      for walk, colors, line_thickness in (
          (pearl.inner, PEARL_INNER_LAYER_COLORS, 3),
              (pearl.outer, PEARL_OUTER_LAYER_COLORS, 1)):
        circles = []
        for a, b in itertools.pairwise(itertools.chain([None], walk)):
          assert b is not None
          bx, by = b.pos
          if a is not None and a.layer == b.layer:
            ax, ay = a.pos
            adj = (
                ax in range(
                    bx -
                    1,
                    bx +
                    2)) and (
                ay in range(
                    by -
                    1,
                    by +
                    2))
            if adj:
              frame.draw_line(
                colors[a.layer % len(colors)],
                (ax + 0.5, ay + 0.5),
                (bx + 0.5, by + 0.5),
                line_thickness)
            else:
              circles.append(b)
          else:
            circles.append(b)
        for c in circles:
          x, y = c.pos
          frame.draw_circle(
            colors[c.layer % len(colors)],
            (x + 0.5, y + 0.5),
            0.3)
          frame.draw_label_for_rect(
            self.font,
            str(c.layer),
            (0, 0, 0),
            None,
            (x, y, 1, 1),
            (0, 0),
            False)




    if stage == 'adjure':
      # Draw objectives that have map positions
      for x, y in self.cavern.adjurator.positions:
        frame.draw_circle(
            OBJECTIVE_COLOR,
            (x + 0.5, y + 0.5),
            5,
            2)






    # Draw the logged details
    if details:
      frame.draw_text(
          self.font_med,
          str(details),
          LOG_DETAILS_COLOR,
          (Relative(0.5), Relative(1)),
          (0, -1))
    elif stage == 'serialize':
      message = (
          f'{len(self.cavern.diorama.script):d} script lines\n'
          f'Total file size: {len(self.cavern.serialized)//1024:d}kB'
      )
      frame.draw_text(
          self.font_med,
          message,
          LOG_DETAILS_COLOR,
          (Relative(0.5), Relative(1)),
          (0, -1))
